apiVersion: v1
kind: Namespace
metadata:
  name: train
---
apiVersion: v1
kind: Service
metadata:
  name: shell-svc
  namespace: train
  labels:
    app: shell
spec:
  ports:
  - name: http
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: shell
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shell-deploy
  namespace: train
spec:
  selector:
    matchLabels:
      app: shell
  replicas: 1
  template:
    metadata:
      labels:
        app: shell
    spec:
      containers:
      - name: shell
        image: krishnasrinivas/wetty
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 1000m
            memory: 1000Mi
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 3000
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: 3000
          initialDelaySeconds: 2
          timeoutSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 3000
          initialDelaySeconds: 5
          timeoutSeconds: 10
      - image: lopof/alpine-sshd
        imagePullPolicy: Always
        name: sshd
        resources:
          limits:
            cpu: 1000m
            memory: 1000Mi
          requests:
            cpu: 100m
            memory: 100Mi
      - image: docker:18.09.9-dind
        imagePullPolicy: Always
        name: dind
        ports:
        - containerPort: 2375
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: true
          capabilities: {}
          privileged: true
          procMount: Default
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
        readinessProbe:
          tcpSocket:
            port: 2375
          initialDelaySeconds: 2
          timeoutSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 2375
          initialDelaySeconds: 5
          timeoutSeconds: 10
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: shell-ing
  namespace: train
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
#  tls:
#  - hosts:
#    - localhost #shell.acend.ch
#    secretName: tls-shell-ingress
  rules:
  - host: shell-train.tom
    http:
      paths:
      - path: /
        backend:
          serviceName: shell-svc
          servicePort: 3000
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: trainer-crb
  namespace: train
roleRef:   
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: default    
  namespace: train
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: training-crb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view
subjects:
- kind: ServiceAccount
  name: default
  namespace: train
